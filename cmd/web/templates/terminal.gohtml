{{template "base" .}}

{{define "title"}}Virtual Terminal{{end}}

{{define "content"}}
<h2>Virtual Terminal</h2>
<hr />

<form action="/payment-succeeded" method="post" name="charge_form" id="charge_form" class="d-block needs-validation charge-form" autocomplete="off" novalidate="">

  <div class="mb-3">
    <label for="amount" class="form-label">Amount</label>
    <input type="text" class="form-control" id="amount" name="amount" required autocomplete="amount-new" />
  </div>

  <div class="mb-3">
    <label for="card-holder-name" class="form-label">Card Holder Name</label>
    <input type="text" class="form-control" id="card-holder-name" name="card-holder-name" required autocomplete="card-holder-name-new" />
  </div>

  <div class="mb-3">
    <label for="card-holder-email" class="form-label">Email</label>
    <input type="email" class="form-control" id="card-holder-email" name="card-holder-email" required autocomplete="card-holder-email-new" />
  </div>

  <div class="mb-3">
    <label for="card-element" class="form-label">Credit Card</label>
    <div id="card-element" class="form-control"></div>
    <div class="alert-danger text-center mt-2" id="card-errors" role="alert"></div>
    <div class="alert-success text-center mt-2" id="card-success" role="alert"></div>
  </div>

  <hr />

  <button type="button" id="pay-button" class="btn btn-primary">Charge Card</button>
</form>
{{end}}

{{define "js"}}
<script src="https://js.stripe.com/v3/"></script>
<script>
  const stripe = Stripe("pk_test_XXXXXXXXXXXXXXXXXXXXXXXX"); // Replace with your publishable key
  const elements = stripe.elements();

  const style = {
    base: {
      fontSize: '16px',
      color: '#32325d',
      '::placeholder': { color: '#aab7c4' }
    },
    invalid: {
      color: '#fa755a',
      iconColor: '#fa755a'
    }
  };

  const card = elements.create('card', { style });
  card.mount('#card-element');

  card.on('change', function (event) {
    const errorDiv = document.getElementById('card-errors');
    if (event.error) {
      errorDiv.textContent = event.error.message;
    } else {
      errorDiv.textContent = '';
    }
  });

  document.getElementById('pay-button').addEventListener('click', async function (e) {
    e.preventDefault();

    const form = document.getElementById('charge_form');

    const { token, error } = await stripe.createToken(card);

    if (error) {
      document.getElementById('card-errors').textContent = error.message;
    } else {
      // Inject token into the form
      const hiddenInput = document.createElement('input');
      hiddenInput.setAttribute('type', 'hidden');
      hiddenInput.setAttribute('name', 'stripeToken');
      hiddenInput.setAttribute('value', token.id);
      form.appendChild(hiddenInput);

      form.submit();
    }
  });
</script>
{{end}}
